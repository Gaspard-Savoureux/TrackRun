image: node:21-alpine3.18

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - frontend/node_modules/

stages:
  - install
  - build
  - test

install_dependencies:
  stage: install
  script:
    - npm install
  only:
    - main
    - ymlModification
    - develop

build_frontend:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
    - frontend/build
  only:
    - main
    - ymlModification
    - develop

test_frontend:
  stage: test
  script:
    - npm run test
  only:
    - main
    - ymlModification
    - develop

# kaniko prevents running docker in docker. Equivalent of docker build + docker push
# https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
package_frontend:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$CI_DEPENDENCY_PROXY_SERVER\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" >/kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:latest"
  only:
    - main
